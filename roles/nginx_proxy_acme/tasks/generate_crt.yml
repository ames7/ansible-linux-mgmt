---
- name: Generate Let's Encrypt account key
  community.crypto.openssl_privatekey:
    path: "{{ acme_letsencrypt_account_key }}"

- name: Generate Let's Encrypt private key
  community.crypto.openssl_privatekey:
    path: "{{ acme_letsencrypt_keys_dir }}/{{ acme_domain_name }}.key"

- name: Generate Let's Encrypt CSR
  community.crypto.openssl_csr:
    path: "{{ acme_letsencrypt_csrs_dir }}/{{ acme_domain_name }}.csr"
    privatekey_path: "{{ acme_letsencrypt_keys_dir }}/{{ acme_domain_name }}.key"
    common_name: "{{ acme_domain_name }}"

- name: Begin Let's Encrypt challenges
  register: r_acme_challenge
  community.crypto.acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ acme_letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    terms_agreed: 1
    challenge: "{{ acme_challenge_type }}"
    csr: "{{ acme_letsencrypt_csrs_dir }}/{{ acme_domain_name }}.csr"
    dest: "{{ acme_letsencrypt_certs_dir }}/{{ acme_domain_name }}.pem"
    fullchain_dest: "{{ acme_letsencrypt_certs_dir }}/fullchain_{{ acme_domain_name }}.pem"
    remaining_days: 91

- name: debug r_acme_challenge
  ansible.builtin.debug: 
    msg: "{{ r_acme_challenge }}"


- name: Create DNS record for sample.com dns-01 challenge
  amazon.aws.route53:
    zone: "{{ acme_domain_name.split('.')[1:] | join('.') }}"
    record: "{{ r_acme_challenge.challenge_data[acme_domain_name]['dns-01'].record }}"
    type: TXT
    ttl: 60
    state: present
    wait: true
    # Note: route53 requires TXT entries to be enclosed in quotes
    value: "{{ r_acme_challenge.challenge_data[acme_domain_name]['dns-01'].resource_value | community.dns.quote_txt(always_quote=true) }}"
  when: r_acme_challenge is changed and acme_domain_name in r_acme_challenge.challenge_data

# - name: Create .well-known/acme-challenge directory
#   ansible.builtin.file:
#     path: /var/www/html/.well-known/acme-challenge
#     state: directory
#     owner: root
#     group: root
#     mode: u=rwx,g=rx,o=rx

# - name: Implement http-01 challenge files
#   ansible.builtin.copy:
#     content: "{{ r_acme_challenge['challenge_data'][acme_domain_name]['http-01']['resource_value'] }}"
#     dest: /var/www/html/{{ r_acme_challenge['challenge_data'][acme_domain_name]['http-01']['resource'] }}
#     owner: root
#     group: root
#     mode: u=rw,g=r,o=r

- name: Complete Let's Encrypt challenges
  notify: Restart nginx
  community.crypto.acme_certificate:
    acme_directory: "{{ acme_directory }}"
    acme_version: "{{ acme_version }}"
    account_key_src: "{{ acme_letsencrypt_account_key }}"
    account_email: "{{ acme_email }}"
    challenge: "{{ acme_challenge_type }}"
    csr: "{{ acme_letsencrypt_csrs_dir }}/{{ acme_domain_name }}.csr"
    dest: "{{ acme_letsencrypt_certs_dir }}/{{ acme_domain_name }}.pem"
    chain_dest: "{{ acme_letsencrypt_certs_dir }}/chain_{{ acme_domain_name }}.pem"
    fullchain_dest: "{{ acme_letsencrypt_certs_dir }}/fullchain_{{ acme_domain_name }}.pem"
    data: "{{ r_acme_challenge }}"

# - name: Template nginx site conf
#   notify: Restart nginx
#   ansible.builtin.template:
#     src: site-ssl.conf.j2
#     dest: /etc/nginx/sites-available/{{ acme_domain_name }}.conf
#     owner: root
#     group: root
#     mode: "0664"
